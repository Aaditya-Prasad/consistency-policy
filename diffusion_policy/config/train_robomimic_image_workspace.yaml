defaults:
  - _self_
  - task: lift_image

name: train_robomimic_image
_target_: diffusion_policy.workspace.train_robomimic_image_workspace.TrainRobomimicImageWorkspace

task_name: ${task.name}
shape_meta: ${task.shape_meta}
exp_name: "default"

horizon: &horizon 10
n_obs_steps: 1
n_action_steps: 1
n_latency_steps: 0
dataset_obs_steps: *horizon
past_action_visible: False
keypoint_visible_rate: 1.0

policy:
  _target_: diffusion_policy.policy.robomimic_image_policy.RobomimicImagePolicy
  shape_meta: ${shape_meta}
  algo_name: bc_rnn
  obs_type: image
  # oc.select resolver: key, default
  task_name: ${oc.select:task.task_name,lift}
  dataset_type: ${oc.select:task.dataset_type,ph}
  crop_shape: [76,76]

dataloader:
  batch_size: 64
  num_workers: 16
  shuffle: True
  pin_memory: True
  persistent_workers: False

val_dataloader:
  batch_size: 64
  num_workers: 16
  shuffle: False
  pin_memory: True
  persistent_workers: False

training:
  device: "cuda:0"
  seed: 42
  debug: False
  resume: True
  # optimization
  num_epochs: 3050
  # training loop control
  # in epochs
  rollout_every: 50
  checkpoint_every: 50
  val_every: 1
  sample_every: 5
  # steps per epoch
  max_train_steps: null
  max_val_steps: null
  # misc
  tqdm_interval_sec: 1.0

logging:
  project: diffusion_policy_debug
  resume: True
  mode: online
  name: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}
  tags: ["${name}", "${task_name}", "${exp_name}"]
  id: null
  group: null

checkpoint:
  topk:
    monitor_key: test_mean_score
    mode: max
    k: 5
    format_str: 'epoch={epoch:04d}-test_mean_score={test_mean_score:.3f}.ckpt'
  save_last_ckpt: True
  save_last_snapshot: False

multi_run:
  run_dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  wandb_name_base: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}

hydra:
  job:
    override_dirname: ${name}
  run:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  sweep:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
    subdir: ${hydra.job.num}
